// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import 'dart:core';
import 'main.dart' as prefix0;

// ignore_for_file: camel_case_types
// ignore_for_file: implementation_imports
// ignore_for_file: prefer_adjacent_string_concatenation
// ignore_for_file: prefer_collection_literals
// ignore_for_file: unnecessary_const
// ignore_for_file: unused_import

import 'package:reflectable/mirrors.dart' as m;
import 'package:reflectable/src/reflectable_builder_based.dart' as r;
import 'package:reflectable/reflectable.dart' as r show Reflectable;

final _data = <r.Reflectable, r.ReflectorData>{
  const prefix0.MyReflectable(): r.ReflectorData(
      <m.TypeMirror>[
        r.NonGenericClassMirrorImpl(
            r'A',
            r'.A',
            134217735,
            0,
            const prefix0.MyReflectable(),
            const <int>[-1],
            null,
            null,
            -1,
            {
              r'noArguments': () => prefix0.A.noArguments,
              r'oneArgument': () => prefix0.A.oneArgument,
              r'optionalArguments': () => prefix0.A.optionalArguments,
              r'namedArguments': () => prefix0.A.namedArguments
            },
            {},
            {r'': (bool b) => () => b ? prefix0.A() : null},
            -1,
            -1,
            const <int>[-1],
            null,
            {
              r'==': 1,
              r'toString': 0,
              r'noSuchMethod': 1,
              r'hashCode': 0,
              r'runtimeType': 0,
              r'arg0': 0,
              r'arg1': 1,
              r'arg1to3': 2,
              r'argNamed': 3,
              r'+': 1,
              r'[]': 1,
              r'[]=': 3,
              r'unary-': 0,
              r'~': 0,
              r'f': 0,
              r'f=': 1,
              r'noArguments': 0,
              r'oneArgument': 1,
              r'optionalArguments': 2,
              r'namedArguments': 3
            })
      ],
      null,
      null,
      <Type>[prefix0.A],
      1,
      {
        r'==': (dynamic instance) => (x) => instance == x,
        r'toString': (dynamic instance) => instance.toString,
        r'noSuchMethod': (dynamic instance) => instance.noSuchMethod,
        r'hashCode': (dynamic instance) => instance.hashCode,
        r'runtimeType': (dynamic instance) => instance.runtimeType,
        r'arg0': (dynamic instance) => instance.arg0,
        r'arg1': (dynamic instance) => instance.arg1,
        r'arg1to3': (dynamic instance) => instance.arg1to3,
        r'argNamed': (dynamic instance) => instance.argNamed,
        r'+': (dynamic instance) => (x) => instance + x,
        r'[]': (dynamic instance) => (x) => instance[x],
        r'[]=': (dynamic instance) => (x, v) => instance[x] = v,
        r'unary-': (dynamic instance) => () => -instance,
        r'~': (dynamic instance) => () => ~instance,
        r'f': (dynamic instance) => instance.f
      },
      {r'f=': (dynamic instance, value) => instance.f = value},
      null,
      [
        const [0, 0, null],
        const [1, 0, null],
        const [4, 2, null],
        const [
          2,
          0,
          const [#z]
        ]
      ])
};

final _memberSymbolMap = null;

void initializeReflectable() {
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
